---
- name: Create config server config file from template
  template:
    src: mongod_without_security.conf.template
    dest: /etc/mongod.conf
  vars:
    shard_name: "{{ replica_info[host_group].shard }}"
  register: mongod_conf
  notify:
    - restart mongod
  when: "mongodb_replica_is_set" in ansible_facts.ansible_local and ansible_facts.ansible_local.mongodb_replica_is_set != "true"

- name: Restart mongod service
  service:
    name: mongod
    state: restarted
  when: mongod_conf.changed

- name: Pause for 3 seconds for mongod process
  pause:
    seconds: 3

- name: Shard node replicaset
  community.mongodb.mongodb_replicaset:
    login_host: localhost:{{ shard_port }}
    login_database: admin
    replica_set: "{{ replica_info[host_group].shard }}"
    members: "{{ replica_info[host_group].members }}"
    arbiter_at_index: "{{ replica_info[host_group].arbiter_index }}"
  when: ansible_facts.ansible_local.custom.mongodb.rs_primary == "true" and "mongodb_replica_is_set" in ansible_facts.ansible_local and ansible_facts.ansible_local.mongodb_replica_is_set != "true"

- name: Pause for 30 seconds for replicaset
  pause:
    seconds: 30
  when: "mongodb_replica_is_set" in ansible_facts.ansible_local and ansible_facts.ansible_local.mongodb_replica_is_set != "true"

- name: Create admin user
  community.mongodb.mongodb_user:
    login_host: localhost
    login_port: "{{ shard_port }}"
    replica_set: "{{ replica_info[host_group].shard }}"
    database: admin
    name: "{{ admin_user }}"
    password: "{{ admin_password }}"
    roles:
      - db: admin
        role: root
    state: present
    when: "mongodb_replica_is_set" in ansible_facts.ansible_local and ansible_facts.ansible_local.mongodb_replica_is_set != "true"

- name: Change config server(with security) config from template
  template:
    src: mongod.conf.template
    dest: /etc/mongod.conf
  vars:
    shard_name: "{{ replica_info[host_group].shard }}"
  notify:
    - restart mongod
  register: mongod_conf_with_security
  when: "mongodb_replica_is_set" in ansible_facts.ansible_local and ansible_facts.ansible_local.mongodb_replica_is_set != "true"

- name: Restart mongod service
  service:
    name: mongod
    state: restarted
  when: mongod_conf_with_security.changed

- name: Create custom facts (is_set)
  copy:
    dest: /etc/ansible/facts.d/mongodb_replica_is_set.fact
    mode: 0755
    content: '"true"'
  when: "mongodb_replica_is_set" in ansible_facts.ansible_local and ansible_facts.ansible_local.mongodb_replica_is_set != "true"
